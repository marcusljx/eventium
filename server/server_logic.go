package server

/* AUTOGENERATED USING grpcgen
 *  add your server logic here!
 * For template changes/edits/bugs/new features, please contact marcusljx@gmail.com
 */

import (
	"log"

	"github.com/marcusljx/eventium/eventiumpb"
	"github.com/satori/go.uuid"
	"golang.org/x/net/context"
)

func (s *eventiumLogic) PostEvent(ctx context.Context, req *eventiumpb.Eventum) (*eventiumpb.PostEventResponse, error) {
	eventKey := uuid.NewV1()
	s.data.Put(eventKey.String(), req)

	return &eventiumpb.PostEventResponse{
		Success: true,
		EventID: eventKey.String(),
	}, nil
}

func (s *eventiumLogic) GetEventByID(ctx context.Context, req *eventiumpb.GetEventByIDRequest) (*eventiumpb.Eventum, error) {
	d, err := s.data.Get(req.Id)
	if err != nil {
		log.Printf("Error while retrieving data of key[%s]: %v", req.Id, err)
		return nil, err
	}

	data, ok := d.(*eventiumpb.Eventum)
	if !ok {
		log.Printf("Corrupted Data retrieved. Could not assert datatype [*eventiumpb.Eventum]: %v", err)
		return nil, err
	}
	return data, nil
}

func (s *eventiumLogic) GetEventByNearbyLocation(ctx context.Context, req *eventiumpb.Location) (*eventiumpb.Eventum, error) {
	//TODO: Implement logic for eventiumLogic.GetEventByNearbyLocation
	return nil, nil
}
